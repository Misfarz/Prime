<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - Prime</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gray-50">
    <%- include('../partials/user/header') %>

    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          
            <div class="bg-white rounded-lg shadow-md p-6">
                <h2 class="text-2xl font-bold mb-6">Delivery Address</h2>
                
              
                <div class="space-y-4" id="address-list">
                    <% if (addresses && addresses.length > 0) { %>
                        <% addresses.forEach(address => { %>
                            <div class="address-card p-4 rounded-lg border <%= address.isDefault ? 'border-blue-500 bg-blue-50' : 'border-gray-200' %> cursor-pointer hover:bg-gray-50 transition-colors" data-address-id="<%= address._id %>">
                                <div class="flex justify-between items-start mb-2">
                                    <div>
                                        <h3 class="font-medium"><%= address.fullName %></h3>
                                        <p class="text-sm text-gray-600"><%= address.addressLine1 %></p>
                                        <% if (address.addressLine2) { %>
                                            <p class="text-sm text-gray-600"><%= address.addressLine2 %></p>
                                        <% } %>
                                        <p class="text-sm text-gray-600"><%= address.city %>, <%= address.state %> <%= address.postalCode %></p>
                                        <p class="text-sm text-gray-600"><%= address.country %></p>
                                        <p class="text-sm text-gray-600">Phone: <%= address.phone %></p>
                                    </div>
                                    <div class="flex items-center space-x-2">
                                        <input type="radio" name="address" value="<%= address._id %>" class="w-4 h-4 text-blue-600" <%= address.isDefault ? 'checked' : '' %>>
                                        <button class="text-gray-500 hover:text-gray-700 edit-address-btn" data-address-id="<%= address._id %>" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <a href="/profile/addresses/delete/<%= address._id %>?redirect=/checkout" class="text-gray-500 hover:text-gray-700" title="Delete" onclick="return confirm('Are you sure you want to delete this address?')">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </div>
                                <% if (address.isDefault) { %>
                                    <div class="mt-2">
                                        <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-xs font-medium">
                                            Default
                                        </span>
                                    </div>
                                <% } %>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="p-4 bg-yellow-50 text-yellow-700 rounded-md">
                            <p>You don't have any saved addresses yet. Please add a new address to continue.</p>
                        </div>
                    <% } %>
                </div>

          
                <button id="add-address-btn" class="w-full mt-6 flex items-center justify-center py-3 px-4 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors">
                    <i class="fas fa-plus mr-2"></i>
                    Add New Address
                </button>

              
                <div class="fixed inset-0 bg-black bg-opacity-50 hidden" id="addressModal">
                    <div class="relative top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white rounded-lg p-6 w-full max-w-md">
                        <h3 class="text-xl font-bold mb-4" id="address-modal-title">Add New Address</h3>
                        <form class="space-y-4" id="address-form" action="/profile/addresses/add" method="POST">
                            <input type="hidden" name="addressId" id="address-id">
                            <input type="hidden" name="redirectTo" value="checkout">
                            <div>
                                <label class="block text-sm font-medium mb-1" for="fullName">Full Name</label>
                                <input type="text" id="fullName" name="fullName" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                            <div>
                                <label class="block text-sm font-medium mb-1" for="addressLine1">Address Line 1</label>
                                <input type="text" id="addressLine1" name="addressLine1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                            <div>
                                <label class="block text-sm font-medium mb-1" for="addressLine2">Address Line 2 (Optional)</label>
                                <input type="text" id="addressLine2" name="addressLine2" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                            <div class="grid grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium mb-1" for="city">City</label>
                                    <input type="text" id="city" name="city" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium mb-1" for="state">State</label>
                                    <input type="text" id="state" name="state" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                </div>
                            </div>
                            <div class="grid grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium mb-1" for="postalCode">Postal Code</label>
                                    <input type="text" id="postalCode" name="postalCode" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium mb-1" for="country">Country</label>
                                    <input type="text" id="country" name="country" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                </div>
                            </div>
                            <div>
                                <label class="block text-sm font-medium mb-1" for="phone">Phone</label>
                                <input type="tel" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="isDefault" name="isDefault" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                <label for="isDefault" class="ml-2 block text-sm text-gray-900">Set as default address</label>
                            </div>
                            <div class="flex justify-end space-x-3">
                                <button type="button" id="cancel-address-btn" class="px-4 py-2 text-gray-600 hover:text-gray-800">Cancel</button>
                                <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Save Address</button>
                            </div>
                        </form>
                    </div>
                </div>

           
                <div class="mt-8">
                    <h3 class="text-xl font-bold mb-4">Payment Method</h3>
                    <div class="space-y-4">
                        <div class="flex items-center space-x-3">
                            <input type="radio" name="payment" id="cod" class="w-4 h-4 text-blue-600">
                            <label for="cod" class="flex items-center space-x-3">
                                <i class="fas fa-money-bill-wave text-blue-600"></i>
                                <span>Cash on Delivery</span>
                            </label>
                            

                        </div>
                    </div>
                </div>
            </div>

        
            <div class="bg-white rounded-lg shadow-md p-6">
                <h2 class="text-2xl font-bold mb-6">Order Summary</h2>
                
                
                <div class="space-y-4">
                    <% if (cart && cart.items && cart.items.length > 0) { %>
                        <% cart.items.forEach(item => { %>
                            <div class="cart-item flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                <div class="flex items-center space-x-4">
                                    <img src="<%= item.product.productImage && item.product.productImage.length > 0 ? item.product.productImage[0] : '/images/product-placeholder.jpg' %>" alt="<%= item.product.productName %>" class="w-20 h-20 object-cover rounded">
                                    <div>
                                        <h3 class="font-medium"><%= item.product.productName %></h3>
                                        <p class="text-sm text-gray-600">
                                            <% if (item.size) { %>Size: <%= item.size %>,<% } %>
                                        </p>
                                        <p class="text-sm text-gray-600">Price: <span class="price">₹<%= item.price ? item.price.toFixed(2) : (item.product.salePrice || item.product.regularPrice).toFixed(2) %></span></p>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-4">
                                    <div class="flex items-center space-x-2">
                                        <span class="px-2 py-1 bg-gray-100 rounded quantity"><%= item.quantity %></span>
                                    </div>
                                    <span class="font-medium">₹<%= (item.price * item.quantity).toFixed(2) %></span>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="p-4 bg-yellow-50 text-yellow-700 rounded-md">
                            <p>Your cart is empty. <a href="/shop" class="text-blue-600 hover:underline">Continue shopping</a></p>
                        </div>
                    <% } %>
                </div>

                
                <div class="mt-8 space-y-4">
                    <div class="flex justify-between">
                        <span>Subtotal</span>
                        <span id="subtotal">₹<%= summary.subtotal.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between">
                        <span>Shipping</span>
                        <span id="shipping">₹<%= summary.shipping.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between">
                        <span>Tax</span>
                        <span id="tax">₹<%= summary.tax.toFixed(2) %></span>
                    </div>
                    <div class="border-t pt-4 flex justify-between font-bold text-lg">
                        <span>Total</span>
                        <span id="total">₹<%= summary.total.toFixed(2) %></span>
                    </div>
                </div>

               
                <form action="/checkout/place-order" method="POST" id="place-order-form">
                    <input type="hidden" name="addressId" id="selected-address-id">
                    <input type="hidden" name="paymentMethod" value="cod">
                    <button type="submit" class="w-full bg-blue-600 text-white py-3 rounded-md hover:bg-blue-700 mt-6" id="place-order-btn" <% if (!cart || !cart.items || cart.items.length === 0) { %>disabled<% } %>>
                        Place Order
                    </button>
                </form>
                
               
                <div id="loading-overlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
                    <div class="bg-white p-5 rounded-lg flex flex-col items-center">
                        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-3"></div>
                        <p class="text-gray-700">Processing your order...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script>
    document.addEventListener('DOMContentLoaded', function() {
        
        const addressModal = document.getElementById('addressModal');
        const addressForm = document.getElementById('address-form');
        const addressCards = document.querySelectorAll('.address-card');
        const addAddressBtn = document.getElementById('add-address-btn');
        const cancelAddressBtn = document.getElementById('cancel-address-btn');
        const modalTitle = document.getElementById('address-modal-title');
        const addressIdInput = document.getElementById('address-id');
        const placeOrderForm = document.getElementById('place-order-form');
        const selectedAddressIdInput = document.getElementById('selected-address-id');
        const placeOrderBtn = document.getElementById('place-order-btn');
        
      
        if (addAddressBtn) {
            addAddressBtn.addEventListener('click', () => {
                modalTitle.textContent = 'Add New Address';
                addressForm.reset();
                addressForm.action = '/profile/addresses/add';
                addressIdInput.value = '';
                addressModal.classList.remove('hidden');
            });
        }
        
       
        if (cancelAddressBtn) {
            cancelAddressBtn.addEventListener('click', () => {
                addressModal.classList.add('hidden');
            });
        }
        
        
        addressModal.addEventListener('click', function(e) {
            if (e.target === this) {
                this.classList.add('hidden');
            }
        });
        
       
        document.querySelectorAll('.edit-address-btn').forEach(button => {
            button.addEventListener('click', function() {
                const addressId = this.getAttribute('data-address-id');
                
                addressForm.action = `/profile/addresses/edit/${addressId}`;
                addressIdInput.value = addressId;
                modalTitle.textContent = 'Edit Address';
                
               
                fetch(`/profile/addresses/${addressId}/data`)
                    .then(response => response.json())
                    .then(address => {
                     
                        document.getElementById('fullName').value = address.fullName || '';
                        document.getElementById('addressLine1').value = address.addressLine1 || '';
                        document.getElementById('addressLine2').value = address.addressLine2 || '';
                        document.getElementById('city').value = address.city || '';
                        document.getElementById('state').value = address.state || '';
                        document.getElementById('postalCode').value = address.postalCode || '';
                        document.getElementById('country').value = address.country || '';
                        document.getElementById('phone').value = address.phone || '';
                        document.getElementById('isDefault').checked = address.isDefault || false;
                        
                       
                        addressModal.classList.remove('hidden');
                    })
                    .catch(error => {
                        console.error('Error fetching address data:', error);
                        alert('Failed to load address data. Please try again.');
                    });
            });
        });
        
       
        document.querySelectorAll('input[name="address"]').forEach(radio => {
            radio.addEventListener('change', function() {
                if (this.checked) {
                   
                    selectedAddressIdInput.value = this.value;
                    
                    
                    document.querySelectorAll('.address-card').forEach(card => {
                        if (card.getAttribute('data-address-id') === this.value) {
                            card.classList.add('border-blue-500', 'bg-blue-50');
                        } else {
                            card.classList.remove('border-blue-500', 'bg-blue-50');
                        }
                    });
                }
            });
            
          
            if (radio.checked) {
                selectedAddressIdInput.value = radio.value;
            }
        });
        
      
        if (placeOrderForm) {
            placeOrderForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
          
                const selectedAddress = document.querySelector('input[name="address"]:checked');
                const selectedPayment = document.querySelector('input[name="payment"]:checked');
                
                if (!selectedAddress) {
                    alert('Please select a delivery address');
                    return false;
                }
                
                if (!selectedPayment) {
                    alert('Please select a payment method');
                    return false;
                }
                
             
                placeOrderBtn.disabled = true;
                placeOrderBtn.textContent = 'Placing Order...';
                document.getElementById('loading-overlay').classList.remove('hidden');
                
            
                const formData = new FormData(placeOrderForm);
                
               
                fetch('/checkout/place-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        addressId: formData.get('addressId'),
                        paymentMethod: formData.get('paymentMethod')
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                       
                        window.location.href = `/order-success/${data.orderId}`;
                    } else {
                       
                        alert(data.message || 'Failed to place order. Please try again.');
                        placeOrderBtn.disabled = false;
                        placeOrderBtn.textContent = 'Place Order';
                        document.getElementById('loading-overlay').classList.add('hidden');
                    }
                })
                .catch(error => {
                    console.error('Error placing order:', error);
                    alert('An error occurred while placing your order. Please try again.');
                    placeOrderBtn.disabled = false;
                    placeOrderBtn.textContent = 'Place Order';
                    document.getElementById('loading-overlay').classList.add('hidden');
                });
            });
        }
        
       
        const checkedAddress = document.querySelector('input[name="address"]:checked');
        if (checkedAddress) {
            selectedAddressIdInput.value = checkedAddress.value;
        }
        
      
    });
    </script>
</body>
</html>