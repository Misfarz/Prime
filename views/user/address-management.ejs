<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Manage Addresses - Prime Jersey</title>
  <meta name="description" content="Manage your shipping addresses at Prime Jersey.">
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="icon" type="image/x-icon" href="/favicon.ico">

  <style>
    body {
      font-family: 'Inter', sans-serif;
      scroll-behavior: smooth;
      background-color: #fafafa;
    }
  </style>
</head>
<body>

<%- include('../partials/user/header') %>

<div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <div class="flex items-center mb-6">
            <a href="/profile?tab=addresses" class="text-gray-600 hover:text-gray-900 mr-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
            </a>
            <h1 class="text-2xl font-bold">Manage Addresses</h1>
        </div>
        
   
        <div id="addressesData" data-addresses="<%= JSON.stringify(addresses) %>" class="hidden"></div>
        
       
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-lg font-semibold">Your Addresses</h2>
                <button type="button" onclick="showAddAddressForm()" class="px-4 py-2 bg-gray-800 text-white text-sm rounded-md hover:bg-gray-700 transition">
                    Add New Address
                </button>
            </div>
            
            <% if (addresses && addresses.length > 0) { %>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <% addresses.forEach(address => { %>
                        <div class="p-4 border <%= address.isDefault ? 'border-blue-500' : 'border-gray-200' %> rounded-md relative">
                            <% if (address.isDefault) { %>
                                <span class="absolute top-2 right-2 bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Default</span>
                            <% } %>
                            <p class="font-medium"><%= address.fullName %></p>
                            <p><%= address.addressLine1 %></p>
                            <% if (address.addressLine2) { %>
                                <p><%= address.addressLine2 %></p>
                            <% } %>
                            <p><%= address.city %>, <%= address.state %> <%= address.postalCode %></p>
                            <p><%= address.country %></p>
                            <p><%= address.phone %></p>
                            
                            <div class="mt-3 pt-3 border-t border-gray-100 flex space-x-3">
                                <button type="button" onclick="showEditAddressForm('<%= address._id %>')" class="text-sm text-blue-600 hover:underline">Edit</button>
                                <a href="/profile/addresses/delete/<%= address._id %>" onclick="return confirm('Are you sure you want to delete this address?')" class="text-sm text-red-600 hover:underline">Delete</a>
                                <% if (!address.isDefault) { %>
                                    <form action="/profile/addresses/edit/<%= address._id %>" method="POST">
                                        <input type="hidden" name="fullName" value="<%= address.fullName %>">
                                        <input type="hidden" name="addressLine1" value="<%= address.addressLine1 %>">
                                        <input type="hidden" name="addressLine2" value="<%= address.addressLine2 || '' %>">
                                        <input type="hidden" name="city" value="<%= address.city %>">
                                        <input type="hidden" name="state" value="<%= address.state %>">
                                        <input type="hidden" name="postalCode" value="<%= address.postalCode %>">
                                        <input type="hidden" name="country" value="<%= address.country %>">
                                        <input type="hidden" name="phone" value="<%= address.phone %>">
                                        <input type="hidden" name="isDefault" value="on">
                                        <button type="submit" class="text-sm text-gray-600 hover:underline">Set as Default</button>
                                    </form>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="text-center py-8">
                    <p class="text-gray-500 mb-4">You haven't added any addresses yet</p>
                </div>
            <% } %>
        </div>
        
       
        <div id="addAddressFormContainer" class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hidden">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-lg font-semibold">Add New Address</h2>
                <button type="button" onclick="hideAddAddressForm()" class="text-gray-500 hover:text-gray-700"> 
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </button>
            </div>
            
            <form id="addAddressForm" action="/profile/addresses/add" method="POST" novalidate>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                        <input type="text" id="fullName" name="fullName" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="fullNameError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid name</div>
                    </div>
                    
                    <div>
                        <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                        <input type="tel" id="phone" name="phone" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="phoneError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid phone number</div>
                    </div>
                    
                    <div class="md:col-span-2">
                        <label for="addressLine1" class="block text-sm font-medium text-gray-700 mb-1">Address Line 1</label>
                        <input type="text" id="addressLine1" name="addressLine1" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="addressLine1Error" class="text-red-500 text-xs mt-1 hidden">Please enter your address</div>
                    </div>
                    
                    <div class="md:col-span-2">
                        <label for="addressLine2" class="block text-sm font-medium text-gray-700 mb-1">Address Line 2 (Optional)</label>
                        <input type="text" id="addressLine2" name="addressLine2"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    
                    <div>
                        <label for="city" class="block text-sm font-medium text-gray-700 mb-1">City</label>
                        <input type="text" id="city" name="city" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="cityError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid city</div>
                    </div>
                    
                    <div>
                        <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State</label>
                        <input type="text" id="state" name="state" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="stateError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid state</div>
                    </div>
                    
                    <div>
                        <label for="postalCode" class="block text-sm font-medium text-gray-700 mb-1">Postal Code</label>
                        <input type="text" id="postalCode" name="postalCode" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="postalCodeError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid postal code</div>
                    </div>
                    
                    <div>
                        <label for="country" class="block text-sm font-medium text-gray-700 mb-1">Country</label>
                        <input type="text" id="country" name="country" value="India" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    
                    <div class="md:col-span-2">
                        <div class="flex items-center">
                            <input type="checkbox" id="isDefault" name="isDefault" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                            <label for="isDefault" class="ml-2 block text-sm text-gray-700">
                                Set as default address
                            </label>
                        </div>
                    </div>
                </div>
                
                <div class="mt-6 flex justify-end">
                    <button type="button" onclick="hideAddAddressForm()" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-md mr-3 hover:bg-gray-50 transition">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-700 transition">
                        Save Address
                    </button>
                </div>
            </form>
        </div>
        
        
        <div id="editAddressForm" class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hidden">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-lg font-semibold">Edit Address</h2>
                <button type="button" onclick="hideEditAddressForm()" class="text-gray-500 hover:text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </button>
            </div>
            
            <form id="editAddressFormElement" action="/profile/addresses/edit/" method="POST" novalidate>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label for="editFullName" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                        <input type="text" id="editFullName" name="fullName" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="editFullNameError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid name</div>
                    </div>
                    
                    <div>
                        <label for="editPhone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                        <input type="tel" id="editPhone" name="phone" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="editPhoneError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid phone number</div>
                    </div>
                    
                    <div class="md:col-span-2">
                        <label for="editAddressLine1" class="block text-sm font-medium text-gray-700 mb-1">Address Line 1</label>
                        <input type="text" id="editAddressLine1" name="addressLine1" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="editAddressLine1Error" class="text-red-500 text-xs mt-1 hidden">Please enter your address</div>
                    </div>
                    
                    <div class="md:col-span-2">
                        <label for="editAddressLine2" class="block text-sm font-medium text-gray-700 mb-1">Address Line 2 (Optional)</label>
                        <input type="text" id="editAddressLine2" name="addressLine2"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    
                    <div>
                        <label for="editCity" class="block text-sm font-medium text-gray-700 mb-1">City</label>
                        <input type="text" id="editCity" name="city" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="editCityError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid city</div>
                    </div>
                    
                    <div>
                        <label for="editState" class="block text-sm font-medium text-gray-700 mb-1">State</label>
                        <input type="text" id="editState" name="state" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="editStateError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid state</div>
                    </div>
                    
                    <div>
                        <label for="editPostalCode" class="block text-sm font-medium text-gray-700 mb-1">Postal Code</label>
                        <input type="text" id="editPostalCode" name="postalCode" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <div id="editPostalCodeError" class="text-red-500 text-xs mt-1 hidden">Please enter a valid postal code</div>
                    </div>
                    
                    <div>
                        <label for="editCountry" class="block text-sm font-medium text-gray-700 mb-1">Country</label>
                        <input type="text" id="editCountry" name="country" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    
                    <div class="md:col-span-2">
                        <div class="flex items-center">
                            <input type="checkbox" id="editIsDefault" name="isDefault" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                            <label for="editIsDefault" class="ml-2 block text-sm text-gray-700">
                                Set as default address
                            </label>
                        </div>
                    </div>
                </div>
                
                <div class="mt-6 flex justify-end">
                    <button type="button" onclick="hideEditAddressForm()" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-md mr-3 hover:bg-gray-50 transition">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-700 transition">
                        Update Address
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
     
        const addForm = document.getElementById('addAddressForm');
        const editForm = document.getElementById('editAddressFormElement');
        
    
        const fullNameInput = document.getElementById('fullName');
        const phoneInput = document.getElementById('phone');
        const addressLine1Input = document.getElementById('addressLine1');
        const cityInput = document.getElementById('city');
        const stateInput = document.getElementById('state');
        const postalCodeInput = document.getElementById('postalCode');
 
        const fullNameError = document.getElementById('fullNameError');
        const phoneError = document.getElementById('phoneError');
        const addressLine1Error = document.getElementById('addressLine1Error');
        const cityError = document.getElementById('cityError');
        const stateError = document.getElementById('stateError');
        const postalCodeError = document.getElementById('postalCodeError');
        
      
        const editFullNameInput = document.getElementById('editFullName');
        const editPhoneInput = document.getElementById('editPhone');
        const editAddressLine1Input = document.getElementById('editAddressLine1');
        const editCityInput = document.getElementById('editCity');
        const editStateInput = document.getElementById('editState');
        const editPostalCodeInput = document.getElementById('editPostalCode');
        
       
        const editFullNameError = document.getElementById('editFullNameError');
        const editPhoneError = document.getElementById('editPhoneError');
        const editAddressLine1Error = document.getElementById('editAddressLine1Error');
        const editCityError = document.getElementById('editCityError');
        const editStateError = document.getElementById('editStateError');
        const editPostalCodeError = document.getElementById('editPostalCodeError');
        
       
        if (addForm) {
            fullNameInput.addEventListener('input', () => validateField(fullNameInput, fullNameError));
            phoneInput.addEventListener('input', () => validatePhoneField(phoneInput, phoneError));
            addressLine1Input.addEventListener('input', () => validateField(addressLine1Input, addressLine1Error));
            cityInput.addEventListener('input', () => validateField(cityInput, cityError));
            stateInput.addEventListener('input', () => validateField(stateInput, stateError));
            postalCodeInput.addEventListener('input', () => validatePostalCodeField(postalCodeInput, postalCodeError));
            
            addForm.addEventListener('submit', (e) => {
                e.preventDefault();
                
                const isFullNameValid = validateField(fullNameInput, fullNameError);
                const isPhoneValid = validatePhoneField(phoneInput, phoneError);
                const isAddressLine1Valid = validateField(addressLine1Input, addressLine1Error);
                const isCityValid = validateField(cityInput, cityError);
                const isStateValid = validateField(stateInput, stateError);
                const isPostalCodeValid = validatePostalCodeField(postalCodeInput, postalCodeError);
                
                if (isFullNameValid && isPhoneValid && isAddressLine1Valid && isCityValid && isStateValid && isPostalCodeValid) {
                    addForm.submit();
                }
            });
        }
        
      
        if (editForm) {
            editFullNameInput.addEventListener('input', () => validateField(editFullNameInput, editFullNameError));
            editPhoneInput.addEventListener('input', () => validatePhoneField(editPhoneInput, editPhoneError));
            editAddressLine1Input.addEventListener('input', () => validateField(editAddressLine1Input, editAddressLine1Error));
            editCityInput.addEventListener('input', () => validateField(editCityInput, editCityError));
            editStateInput.addEventListener('input', () => validateField(editStateInput, editStateError));
            editPostalCodeInput.addEventListener('input', () => validatePostalCodeField(editPostalCodeInput, editPostalCodeError));
            
            editForm.addEventListener('submit', (e) => {
                e.preventDefault();
                
                const isFullNameValid = validateField(editFullNameInput, editFullNameError);
                const isPhoneValid = validatePhoneField(editPhoneInput, editPhoneError);
                const isAddressLine1Valid = validateField(editAddressLine1Input, editAddressLine1Error);
                const isCityValid = validateField(editCityInput, editCityError);
                const isStateValid = validateField(editStateInput, editStateError);
                const isPostalCodeValid = validatePostalCodeField(editPostalCodeInput, editPostalCodeError);
                
                if (isFullNameValid && isPhoneValid && isAddressLine1Valid && isCityValid && isStateValid && isPostalCodeValid) {
                    editForm.submit();
                }
            });
        }
        
      
        function validateField(input, errorElement) {
            const value = input.value.trim();
            const isValid = value.length > 0;
            
            if (!isValid) {
                errorElement.classList.remove('hidden');
                input.classList.add('border-red-500');
                input.classList.remove('border-green-500');
            } else {
                errorElement.classList.add('hidden');
                input.classList.remove('border-red-500');
                input.classList.add('border-green-500');
            }
            
            return isValid;
        }
        
        function validatePhoneField(input, errorElement) {
            const value = input.value.trim();
            const phoneRegex = /^[0-9]{10}$/;
            const isValid = phoneRegex.test(value);
            
            if (!isValid) {
                errorElement.classList.remove('hidden');
                input.classList.add('border-red-500');
                input.classList.remove('border-green-500');
            } else {
                errorElement.classList.add('hidden');
                input.classList.remove('border-red-500');
                input.classList.add('border-green-500');
            }
            
            return isValid;
        }
        
        function validatePostalCodeField(input, errorElement) {
            const value = input.value.trim();
            const postalCodeRegex = /^[0-9]{6}$/;
            const isValid = postalCodeRegex.test(value);
            
            if (!isValid) {
                errorElement.classList.remove('hidden');
                input.classList.add('border-red-500');
                input.classList.remove('border-green-500');
            } else {
                errorElement.classList.add('hidden');
                input.classList.remove('border-red-500');
                input.classList.add('border-green-500');
            }
            
            return isValid;
        }
    });
    
   
    function showAddAddressForm() {
        document.getElementById('addAddressFormContainer').classList.remove('hidden');
    }
    
    function hideAddAddressForm() {
        document.getElementById('addAddressFormContainer').classList.add('hidden');
    }
    
    
    function showEditAddressForm(addressId) {
       
        const addressElements = document.querySelectorAll('.border');
        let addressData = null;
        
       
        const addressesData = document.getElementById('addressesData');
        if (addressesData) {
            const addresses = JSON.parse(addressesData.getAttribute('data-addresses'));
            addressData = addresses.find(addr => addr._id === addressId);
            
            if (addressData) {
            
                document.getElementById('editAddressFormElement').action = `/profile/addresses/edit/${addressId}`;
                
               
                document.getElementById('editFullName').value = addressData.fullName;
                document.getElementById('editPhone').value = addressData.phone;
                document.getElementById('editAddressLine1').value = addressData.addressLine1;
                document.getElementById('editAddressLine2').value = addressData.addressLine2 || '';
                document.getElementById('editCity').value = addressData.city;
                document.getElementById('editState').value = addressData.state;
                document.getElementById('editPostalCode').value = addressData.postalCode;
                document.getElementById('editCountry').value = addressData.country;
                document.getElementById('editIsDefault').checked = addressData.isDefault;
                
             
                document.getElementById('editAddressForm').classList.remove('hidden');
                
                
                document.getElementById('editAddressForm').scrollIntoView({ behavior: 'smooth' });
            }
        }
    }
    
    function hideEditAddressForm() {
        document.getElementById('editAddressForm').classList.add('hidden');
    }
</script>

<%- include('../partials/user/footer') %>

</body>
</html>
